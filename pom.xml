<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ucp.sandbox</groupId>
    <artifactId>sample-project-java</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>sample-project-java</name>
    <description>Sample project with configuration templates for release procedure</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>10</java.version>

        <docker-maven-plugin.version>1.4.3</docker-maven-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <flatten-maven-plugin.version>1.0.1</flatten-maven-plugin.version>

        <platform-framework.version>2.0.0</platform-framework.version>
        <revision>develop-SNAPSHOT</revision>
    </properties>

    <modules>
        <module>sample-service</module>
        <module>sample-library</module>
        <module>sample-functional-tests</module>
    </modules>

    <!--<distributionManagement>-->
        <!--<repository>-->
            <!--<id>nexus-ucp-releases</id>-->
            <!--<url>${nexus.ucp.releases.url}</url>-->
        <!--</repository>-->
        <!--<snapshotRepository>-->
            <!--<id>nexus-ucp-snapshots</id>-->
            <!--<url>${nexus.ucp.snapshots.url}</url>-->
        <!--</snapshotRepository>-->
    <!--</distributionManagement>-->

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.ucp.sandbox</groupId>
                <artifactId>sample-library</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ucp.sandbox</groupId>
                <artifactId>sample-service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.ucp.platform</groupId>
                <artifactId>platform-framework</artifactId>
                <version>${platform-framework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <!--<pluginManagement>-->
            <!--<plugins>-->
                <!--<plugin>-->
                    <!--<groupId>org.springframework.boot</groupId>-->
                    <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
                    <!--<configuration>-->
                        <!--<excludeDevtools>true</excludeDevtools>-->
                        <!--<excludeGroupIds>com.google.code.findbugs</excludeGroupIds>-->
                        <!--<excludes>-->
                            <!--<exclude>-->
                                <!--<groupId>org.springframework.boot</groupId>-->
                                <!--<artifactId>spring-boot-configuration-processor</artifactId>-->
                            <!--</exclude>-->
                        <!--</excludes>-->
                    <!--</configuration>-->
                    <!--<executions>-->
                        <!--<execution>-->
                            <!--<goals>-->
                                <!--<goal>build-info</goal>-->
                            <!--</goals>-->
                        <!--</execution>-->
                    <!--</executions>-->
                <!--</plugin>-->
                <!--<plugin>-->
                    <!--<artifactId>maven-resources-plugin</artifactId>-->
                    <!--<executions>-->
                        <!--<execution>-->
                            <!--<id>filter-dockerfile</id>-->
                            <!--<phase>generate-resources</phase>-->
                            <!--<goals>-->
                                <!--<goal>copy-resources</goal>-->
                            <!--</goals>-->
                            <!--<configuration>-->
                                <!--<outputDirectory>${project.build.directory}</outputDirectory>-->
                                <!--<resources>-->
                                    <!--<resource>-->
                                        <!--<directory>src/main/docker</directory>-->
                                        <!--<filtering>true</filtering>-->
                                    <!--</resource>-->
                                <!--</resources>-->
                            <!--</configuration>-->
                        <!--</execution>-->
                    <!--</executions>-->
                <!--</plugin>-->
                <!--<plugin>-->
                    <!--<groupId>com.spotify</groupId>-->
                    <!--<artifactId>dockerfile-maven-plugin</artifactId>-->
                    <!--<version>${docker-maven-plugin.version}</version>-->
                    <!--<configuration>-->
                        <!--<repository>${docker.registry.url}/${project.groupId}/${project.artifactId}-->
                        <!--</repository>-->
                        <!--<contextDirectory>${project.build.directory}</contextDirectory>-->
                        <!--<noCache>false</noCache>-->
                        <!--<googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>-->
                    <!--</configuration>-->
                    <!--<executions>-->
                        <!--<execution>-->
                            <!--<id>build-push-docker-image</id>-->
                            <!--<goals>-->
                                <!--<goal>build</goal>-->
                                <!--<goal>push</goal>-->
                            <!--</goals>-->
                        <!--</execution>-->
                    <!--</executions>-->
                    <!--<dependencies>-->
                        <!--<dependency>-->
                            <!--<groupId>javax.activation</groupId>-->
                            <!--<artifactId>activation</artifactId>-->
                            <!--<version>1.1.1</version>-->
                        <!--</dependency>-->
                    <!--</dependencies>-->
                <!--</plugin>-->
                <!--<plugin>-->
                    <!--<groupId>org.apache.maven.plugins</groupId>-->
                    <!--<artifactId>maven-deploy-plugin</artifactId>-->
                    <!--<version>${maven-deploy-plugin.version}</version>-->
                <!--</plugin>-->
                <!--<plugin>-->
                    <!--<groupId>org.codehaus.mojo</groupId>-->
                    <!--<artifactId>flatten-maven-plugin</artifactId>-->
                    <!--<version>${flatten-maven-plugin.version}</version>-->
                    <!--<configuration>-->
                        <!--<flattenMode>bom</flattenMode>-->
                        <!--<outputDirectory>${project.build.outputDirectory}</outputDirectory>-->
                    <!--</configuration>-->
                    <!--<executions>-->
                        <!--<execution>-->
                            <!--<id>flatten</id>-->
                            <!--<phase>process-resources</phase>-->
                            <!--<goals>-->
                                <!--<goal>flatten</goal>-->
                            <!--</goals>-->
                        <!--</execution>-->
                        <!--<execution>-->
                            <!--<id>flatten.clean</id>-->
                            <!--<phase>clean</phase>-->
                            <!--<goals>-->
                                <!--<goal>clean</goal>-->
                            <!--</goals>-->
                        <!--</execution>-->
                    <!--</executions>-->
                <!--</plugin>-->
            <!--</plugins>-->
        <!--</pluginManagement>-->

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>